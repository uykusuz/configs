# The following lines were added by compinstall

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent pwd .. directory
zstyle ':completion:*' insert-unambiguous true
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list ''
zstyle ':completion:*' menu select=long
zstyle ':completion:*' original true
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' squeeze-slashes true
zstyle :compinstall filename '/home/bobbel/.zshrc'

# comment it out: compinit is called at the very end
#autoload -Uz compinit
#compinit
# End of lines added by compinstall

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=9999999999
SAVEHIST=$HISTSIZE
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install

# -----------------------------------------------------------------------------
# --- Plugins ---
#

source /usr/share/zsh/scripts/zplug/init.zsh

# Load completion library for those sweet [tab] squares
zplug "lib/completion", from:oh-my-zsh

zplug "greymd/docker-zsh-completion"

# Async for zsh, used by pure
zplug "mafredri/zsh-async", from:github

# history search like in fish
zplug "zsh-users/zsh-history-substring-search"

# syntax highlighting: this has to come before vimode-visual to avoid conflicts
zplug "zsh-users/zsh-syntax-highlighting"
# v-mode for vi mode
zplug "b4b4r07/zsh-vimode-visual"

# Theme
#zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug "themes/dst", as:theme, from:oh-my-zsh

zplug "superbrothers/zsh-kubectl-prompt"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load --verbose

# -----------------------------------------------------------------------------
# --- Prompt ---
# -----------------------------------------------------------------------------

#  kubectl context - current date
date='%{$fg[yellow]%}[%D{%L:%M:%S} %D{%f/%m/%y}]%{$reset_color%}'
kubectl='%{$fg[magenta]%}($ZSH_KUBECTL_PROMPT)%{$reset_color%}'
RPROMPT="${kubectl} ${date}"

# -----------------------------------------------------------------------------
# --- Key Bindings ---

bindkey '^R' history-incremental-pattern-search-backward

bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# END ZSH CONFIGURATION
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# --- Aliases ---

alias ls='ls --color'
alias ll='ls --color -alhF'
alias la='ls --color -A'
alias ..='cd ..'

alias tl='tar --exclude="*/*/*" -tf'

alias v='vim -c "NERDTree | wincmd w"'

alias gs='git status'
alias gg='lazygit'
alias gk='gitk --all&'

alias yu='yay -Syu --answerclean n --answerdiff n'

# grep: case-insensitive, ignore binaries, print filename, recursive, print line numbers
alias gr='grep -iIsrn'

alias mk='minikube kubectl'

# -----------------------------------------------------------------------------
# --- paths ---

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64
export PATH=$PATH:~/bin

export JAVA_HOME=$(readlink -f /usr/bin/java | sed 's:/bin/java::')

# -----------------------------------------------------------------------------
# --- Google Cloud ---

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/bobbel/local/google-cloud-sdk/path.bash.inc' ]; then source '/home/bobbel/local/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/bobbel/local/google-cloud-sdk/completion.bash.inc' ]; then source '/home/bobbel/local/google-cloud-sdk/completion.bash.inc'; fi

# -----------------------------------------------------------------------------
# --- SSH Agent ---

if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent > ~/.ssh-agent-thing
fi
if [[ "$SSH_AGENT_PID" == "" ]]; then
    eval "$(<~/.ssh-agent-thing)" > /dev/null
fi

# -----------------------------------------------------------------------------
# --- aws ---
ec2ls() {
    aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId,Tags[?Key==`Name`].Value|[0],State.Name,PrivateIpAddress,PublicIpAddress,LaunchTime,Placement.AvailabilityZone,Tags[?Key==`team`].Value|[0]]' --output text | column -t
}
asgls() {
  aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[*].[AutoScalingGroupName,length(Instances[*]),DesiredCapacity,MinSize,MaxSize]'  --output text  | column -t
}
asgcapacity() {
  aws autoscaling set-desired-capacity --auto-scaling-group-name $1 --desired-capacity $2
}

# -----------------------------------------------------------------------------
# --- asdf ---

export ASDF_HOME=/opt/asdf-vm

source $ASDF_HOME/asdf.sh
fpath=($ASDF_HOME/completions $fpath)


# -----------------------------------------------------------------------------
# --- compinit ---

autoload -Uz compinit
compinit

