#!/bin/bash
# vim: set syntax=bash

set -euo pipefail
set -x

imageHome=/home/builder

usage() {
    echo "Usage: $(basename $0) [options] <image> <parameters to docker>"
    echo
    echo "Options:"
    echo "  -h, --home <home>: home directory in the image. Default: ${imageHome}"
    echo "  -r, --root: run as root"
    echo "  -s, --shell <shell>: use that shell"
    echo "  -n, --no-npmrc: disable mounting of npmrc"
    echo "  --cpus <number>: number of cpus to give to the docker process"
}

if (( $# < 1 ));
then
    usage
    exit 0
fi

user=""
cpus=3
shell=/bin/bash
disableNpmrc=0

while (( $# > 0 ));
do
    case "$1" in
    --home)
        shift
        imageHome=$1
        ;;
    -h|--help)
        usage
        exit 0
        ;;
    -r|--root)
        user="-u 0"
        imageHome=/root
        ;;
    --cpus)
        shift
        cpus=$1
        ;;
    -s|--shell)
        shift
        shell=$1
        ;;
    -n|--no-npmrc)
        disableNpmrc=1
        ;;
    *)
        image=$1
        shift
        break
        ;;
    esac
    shift
done

npmrc=
if (( disableNpmrc == 0 ));
then
    npmrc="-v ${HOME}/.npmrc:${imageHome}/.npmrc"
fi

command=

if (( $# > 0));
then
    command=$*
fi

docker run --rm -it \
    ${user} \
    -v $(pwd):/workspace \
    ${npmrc} \
    -v ${HOME}/.ssh/id_ed25519:${imageHome}/.ssh/id_ed25519 \
    -v ${HOME}/.ssh/id_ed25519.pub:${imageHome}/.ssh/id_ed25519.pub \
    -v ${HOME}/.ssh/id_ed25519_yubi:${imageHome}/.ssh/id_ed25519_yubi \
    -v ${HOME}/.ssh/id_ed25519_yubi.pub:${imageHome}/.ssh/id_ed25519_yubi.pub \
    -v ${HOME}/.ssh/known_hosts:${imageHome}/.ssh/known_hosts \
    -v ${HOME}/configs/_ssh/config:${imageHome}/.ssh/config \
    -v ${HOME}/.config/pip/pip.conf:${imageHome}/.config/pip/pip.conf \
    -v ${HOME}/.gitconfig:${imageHome}/.gitconfig \
    -v ${HOME}/.docker/config.json:${imageHome}/.docker/config.json \
    -v ${HOME}/.bunfig.toml:${imageHome}/.bunfig.toml \
    -v ${HOME}/.yarnrc:${imageHome}/.yarnrc \
    -v /etc/xelonic:/etc/xelonic \
    --network host \
    --entrypoint="${shell}" \
    ${image} \
    ${command}
