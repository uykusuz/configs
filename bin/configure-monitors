#!/bin/bash
# vim: set syntax bash

set -euo pipefail
set -x

workspaces="1 2 3 4 5 6 z x c v b"
primaryWorkspaces="1 2 3 4 5 6"

usageAndExit() {
    echo "$(basename $0)"
    echo
    echo "Options:"
    echo "\t--off : turn off external monitors"

    exit $1
}

moveWorkspacesToMonitor() {
    local internalMonitor=$1

    for ws in $workspaces;
    do
        i3-msg "[workspace=${ws}]" move workspace to output "${internalMonitor}" || true
    done
}

moveWorkspacesToMonitor() {
    local monitor=$1; shift

    for ws in $@;
    do
        i3-msg "[workspace=${ws}]" move workspace to output "${monitor}" || true
    done
}

turnOffExternalMonitors() {
    local internalMonitor=$1

    xrandr --output "$internalMonitor" --auto --primary

    moveWorkspacesToMonitor "${internalMonitor}" "${workspaces}"

    if (( $# < 2 ));
    then
        return
    fi

    local externalMonitors=$2
    for monitor in $externalMonitors;
    do
        xrandr --output "$monitor" --off
    done
}

switchToExternalMonitors() {
    local internalMonitor=$1
    local externalMonitors=$2

    previousMonitor="$internalMonitor"
    for monitor in $externalMonitors;
    do
        xrandr --output "$monitor" --auto --left-of "$previousMonitor"
        previousMonitor="$monitor"
    done

    xrandr --output "${previousMonitor}" --primary

    moveWorkspacesToMonitor "${previousMonitor}" "${primaryWorkspaces}"
}

internalMonitor='eDP-1'
externalMonitors=$(xrandr | grep ' connected' | grep -v $internalMonitor | awk '{print $1}') || echo ""
externalMonitorCount=$(echo "$externalMonitors" | wc -w)

if (( $# > 0 ));
then
    case "$1" in
    -h|--help)
        usageAndExit 0
        ;;
    --off)
        turnOffExternalMonitors $internalMonitor
        exit
        ;;
    esac
fi

if (( $externalMonitorCount < 1 ));
then
    turnOffExternalMonitors $internalMonitor $externalMonitors
else
    switchToExternalMonitors $internalMonitor $externalMonitors
fi


# reconfigure xmodmap
# when connecting the external keyboard linux needs to be told to remap the modmap
[[ -f ~/.Xmodmap_en ]] && xmodmap ~/.Xmodmap_en
[[ -f ~/.Xmodmap_language_independent ]] && xmodmap ~/.Xmodmap_language_independent

# reconfigure Ploopy
# 9 -> 2
(set +o pipefail; xinput --set-button-map "Unknown Ploopy Trackball" 1 2 3 4 5 6 7 8 2 | true)
