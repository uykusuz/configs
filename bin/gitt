#!/bin/bash
# vim: set syntax=sh

set -euo pipefail

function usage() {
    echo
    echo "Usage: $(basename $0) <command>"
    echo
    echo "command:"
    echo "  delete              : delete the current branch and checkout origin/master"
    echo "  new [<branch name>] : fetch and checkout origin/master with current changes on top of it"
    echo "  prune               : delete all local branches"
    echo "      -f|--force      : force the deletion of not fully merged branches"
    echo "  pull                : fetch and rebase on origin/master"
}

function newBranch() {
    newBranch=
    if (( $# > 0 ));
    then
        newBranch="-b $1"
    fi

    git fetch
    git checkout $newBranch origin/master
}

function pruneBranches() {
    deletion=-d
    if (( $# > 0 ));
    then
        case "$1" in
        -f|--force)
            deletion=-D
            ;;
        *)
            echo "Unknown parameter: $1"
            usage
            exit 1
            ;;
        esac
    fi

    git branch | grep -v '*' | xargs git branch ${deletion}
}

if (( $# < 1 ));
then
    usage
    exit 1
fi

case "$1" in
-h|--help)
    usage
    exit 0
    ;;
new)
    shift
    newBranch ${1-}
    ;;
delete)
    currentBranch=$(git branch | grep '*' | sed 's/* //')
    git fetch
    git checkout origin/master
    git branch -d $currentBranch
    ;;
pull)
    git fetch
    git rebase origin/master
    ;;
prune)
    shift
    pruneBranches ${1-}
    ;;
*)
    echo "Unknown argument: $1"
    usage
    exit 1
    ;;
esac
